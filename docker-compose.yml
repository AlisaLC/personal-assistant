version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    environment:
      - APP_PORT=${APP_PORT}
    command: /bin/sh -c "envsubst '$$APP_PORT' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    depends_on:
      - web
      - openwebui
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  web:
    build: .
    expose:
      - "${APP_PORT}"
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${NOTES_DB}
      - WEBUI_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${WEBUI_DB}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL}
      - OPENAI_CHAT_MODEL=${OPENAI_CHAT_MODEL}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host ${APP_HOST} --port ${APP_PORT} --reload"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${APP_HOST}:${APP_PORT}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - NOTES_DB=${NOTES_DB}
      - WEBUI_DB=${WEBUI_DB}
    volumes:
      - notes_app_db_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    expose:
      - "8080"
    environment:
      - ENABLE_OLLAMA_API=False
      - ENABLE_OPENAI_API=True
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RAG_EMBEDDING_ENGINE=openai
      - RAG_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL}
      - DEFAULT_MODELS=${OPENAI_CHAT_MODEL}
      - ENABLE_EVALUATION_ARENA_MODELS=False
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${WEBUI_DB}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - WEBUI_JWT_SECRET=${WEBUI_JWT_SECRET}
      - WEBUI_JWT_EXPIRES_IN=7d
      - WEBUI_DATABASE_TYPE=postgres
      - WEBUI_DATABASE_HOST=db
      - WEBUI_DATABASE_PORT=${POSTGRES_PORT}
      - WEBUI_DATABASE_USER=${POSTGRES_USER}
      - WEBUI_DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - WEBUI_DATABASE_NAME=${WEBUI_DB}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  notes_app_db_data: 